#!/usr/bin/env ruby


require 'lucie/log'
require 'lucie/shell'


Lucie::Log.path = STDOUT
Lucie::Log.verbose = true


################################################################################
# Helper methods
################################################################################

#
# 1. Save all directories and files under the directory,
# 2. Mount tmpfs on top of the directory,
# 3. Extract directories and files into the tmpfs.
#
def mkrw dirs
  dirs.each do | each |
    next unless FileTest.directory?( each )
    begin
      if sh_exec( "mktemp -q -p #{ each }" ).child_status.exitstatus == 0
        $stderr.puts "#{ each } is already writable."
        next
      end
    rescue
      # The directory is not writable. OK.
      nil
    end

    tmpfile = `mktemp`.chomp

    sh_exec "tar -C #{ each } -cf #{ tmpfile } ."
    sh_exec "mount -n -o size=10m -t tmpfs tmpfs #{ each }"
    sh_exec "tar -C #{ each } -xf #{ tmpfile }"
    sh_exec "rm -f #{ tmpfile }"
  end
end


def shell commands
  commands.split( "\n" ).each do | each |
    next if /^#/=~ each
    next if /^\s*$/=~ each
    Lucie::Log.debug each
    sh_exec each
  end
end


def hostname 
  File.read( '/proc/cmdline' ).split( ' ' ).select do | each |
    each =~ /hostname=.+/
  end.first[ 'hostname='.size..-1 ]
end


################################################################################
# Create ramdisk
################################################################################

puts 'Creating a writable area on the install client.'

# sh_exec 'mount -n -t proc proc /proc'

begin
  sh_exec 'mount -t tmpfs tmpfs /tmp'
rescue
  ramdevice = '/dev/ram0'
  sh_exec "mke2fs -q -m 0 #{ ramdevice }"
  sh_exec "mount -n #{ ramdevice } /tmp"
end
sh_exec 'mkdir -p /tmp/etc /tmp/target'

mkrw %w(/dev /var/run /var/log /var/lock /var/discover /var/lib/discover /etc/network/run /etc/sysconfig /etc/lvm)
mkrw %w(/var/lib/cfengine2 /var/lib/heartbeat)

Lucie::Log.path = "/tmp/lucie.log"
Lucie::Log.verbose = true


################################################################################
# Init
################################################################################

shell <<-COMMANDS
# mount -t sysfs sysfs /sys

hostname #{ hostname }

[ -x /etc/init.d/udev ] && /etc/init.d/udev start || true
[ -d /var/run/network ] || mkdir /var/run/network
[ -d /dev/shm/network ] || mkdir /dev/shm/network
ifup lo
[ -x /sbin/portmap ] && /sbin/portmap || true

# mount -t devpts devpts /dev/pts
mount -o remount,noatime,ro /dev/root /

# start logging daemons
echo 6 > /proc/sys/kernel/printk
klogd -c7 -f /tmp/kernel.log || true
syslogd -m 0 || true

cp -p /etc/resolv.conf-lucieserver /tmp/etc/resolv.conf

# create two virtual terminals; access via alt-F2 and alt-F3
openvt -c2 /bin/bash
openvt -c3 /bin/bash

# start ssh daemon to receive installation jobs
/usr/sbin/sshd
COMMANDS

puts 'Lucie client SUCCESSFULLY started.'
puts 'Waiting for installation jobs to be submitted...'


################################################################################
# Reboot
################################################################################

STDIN.gets
puts 'Rebooting...'
Dir.chdir('/')

shell <<-COMMANDS
sync
killall -q sshd udevd
umount /tmp/target/proc
umount -ar || true
COMMANDS

exec 'reboot -dfi'


### Local variables:
### mode: Ruby
### coding: euc-jp-unix
### indent-tabs-mode: nil
### End:
